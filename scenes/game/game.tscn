[gd_scene load_steps=8 format=2]

[ext_resource path="res://scenes/game/enemy01.tscn" type="PackedScene" id=1]
[ext_resource path="res://scenes/game/ship.tscn" type="PackedScene" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

export(PackedScene) var enemy_scene_01

export var mission_duration = 30

func _ready():
	randomize()
	
#	$MissonTimer.call_deferred(\"start\", mission_duration)
	$MissionProgressBar.call(\"start_progress\")
	
func _process(_delta):
	if Engine.get_idle_frames() % 50 == 0:
		create_enemy()
		pass

		
func create_enemy():
#	var e: ColorRect = ColorRect.new()
	var mob = enemy_scene_01.instance()
	
	# Choose a random location on MobSpawnLocation to start path.
	var mob_spawn_location = get_node(\"%MobSpawnLocation\")
	mob_spawn_location.offset = randi()
	
	# Choose a random location on ShipTargetLocation to start path.
	var ship_target_location = get_node(\"%ShipTargetLocation\")
	ship_target_location.offset = randi()
	
#	# Set the mob's direction perpendicular to the path direction.
#	var direction = mob_spawn_location.rotation + PI / 2

#	var direction = (ship_target_location.position - mob_spawn_location.position).normalized()
	var direction = ship_target_location.position.angle_to_point(mob_spawn_location.position)
#
#	# Set the mob's position to a random location.
	mob.position = mob_spawn_location.position
#
#	# Add some randomness to the direction.
#	direction += rand_range(-PI / 4, PI / 4)
	mob.rotation = direction
#
#	# Choose the velocity for the mob.
	var velocity = Vector2(rand_range(150.0, 250.0), 0.0)
#	mob.linear_velocity = velocity.rotated(direction)
	mob.linear_velocity = velocity.rotated(direction)

	# Spawn the mob by adding it to the Main scene.
	add_child(mob)
	
	
##	#warning-ignore:return_value_discarded
##	#warning-ignore:return_value_discarded
#	create_tween().set_trans(Tween.TRANS_LINEAR).set_ease(Tween.EASE_IN).tween_property(mob, \"global_position\", ship_target_location.position, .5)
		


func _on_ship_dead():
	get_parent().call(\"next_scene\", self, \"menu_scene\")
	pass # Replace with function body.


func _on_MissionProgressBar_mission_over():
	get_parent().call(\"next_scene\", self, \"menu_scene\")
	pass # Replace with function body.
"

[sub_resource type="GDScript" id=2]
script/source = "extends ProgressBar

export var mission_duration = 30
var timer_active = false
signal mission_over

func _ready():
	self.max_value = mission_duration
	
#	var timer: Timer = get_node(\"%MissonTimer\")
##	timer.connect(\"timeout\", self,\"_update_progess_bar\")
#	timer.call_deferred(\"connect\", \"timeout\", self,\"_update_progess_bar\")
	
	
func _update_progess_bar():
	self.value += 1
	
	if timer_active:
		#warning-ignore:return_value_discarded
		get_tree().create_timer(1.0).connect(\"timeout\", self, \"_update_progess_bar\")


func start_progress():
	timer_active = true
		#warning-ignore:return_value_discarded
	get_tree().create_timer(1.0).connect(\"timeout\", self, \"_update_progess_bar\")
		#warning-ignore:return_value_discarded
	get_tree().create_timer(self.max_value).connect(\"timeout\", self, \"stop_progress\")
	
	
func stop_progress():
	timer_active = false
	emit_signal(\"mission_over\")
"

[sub_resource type="GDScript" id=3]
script/source = "extends Node

var enemy01 = preload(\"res://scenes/game/enemy01.tscn\")
#var tween: SceneTreeTween

func _ready():
#	tween = create_tween().set_trans(Tween.TRANS_LINEAR).set_ease(Tween.EASE_IN)
	pass
	
	
func _process(_delta):
	if Engine.get_idle_frames() % 100 == 0:
#		create_enemy(get_node(\"%SpawnPoint01\"))
		pass
		
		
func create_enemy(spawn_point: Node2D):
#	var e: ColorRect = ColorRect.new()
	var e: RigidBody2D = enemy01.instance()
#	e.rect_size = Vector2(40, 40)
#	e.color = Color.red
	e.global_position = spawn_point.global_position
	add_child(e)
	#warning-ignore:return_value_discarded
	create_tween().set_trans(Tween.TRANS_LINEAR).set_ease(Tween.EASE_IN).tween_property(e, \"global_position\", get_node(\"%ship\").global_position, 1)
#	tween.tween_property(e, \"rect_global_position.x\", get_node(\"%ship\").global_position.x, 1)
#	tween.tween_property(e, \"rect_global_position.y\", get_node(\"%ship\").global_position.y, 1)
	
"

[sub_resource type="Curve2D" id=6]
_data = {
"points": PoolVector2Array( 0, 0, 0, 0, -64, 512, 0, 0, 0, 0, -64, 832, 0, 0, 0, 0, 544, 832, 0, 0, 0, 0, 544, 512 )
}

[sub_resource type="Curve2D" id=7]
_data = {
"points": PoolVector2Array( 0, 0, 0, 0, 120, 48, 0, 0, 0, 0, 120, 296, 0, 0, 0, 0, 368, 296, 0, 0, 0, 0, 368, 48, 0, 0, 0, 0, 120, 48 )
}

[node name="game" type="Node"]
script = SubResource( 1 )
enemy_scene_01 = ExtResource( 1 )

[node name="MissionProgressBar" type="ProgressBar" parent="."]
anchor_right = 1.0
margin_left = 42.0
margin_top = 7.0
margin_right = -29.0
margin_bottom = 31.0
percent_visible = false
script = SubResource( 2 )

[node name="Node" type="Node" parent="."]
script = SubResource( 3 )

[node name="SpawnPoint01" type="Node2D" parent="Node"]
unique_name_in_owner = true
position = Vector2( -49, 538 )

[node name="MobPath" type="Path2D" parent="."]
position = Vector2( -8, -72 )
curve = SubResource( 6 )
__meta__ = {
"_edit_group_": true
}

[node name="MobSpawnLocation" type="PathFollow2D" parent="MobPath"]
unique_name_in_owner = true
position = Vector2( -64, 512 )
rotation = 1.5708

[node name="ShipPath" type="Path2D" parent="."]
curve = SubResource( 7 )
__meta__ = {
"_edit_group_": true
}

[node name="ShipTargetLocation" type="PathFollow2D" parent="ShipPath"]
unique_name_in_owner = true
position = Vector2( 120, 48 )
rotation = 1.5708

[node name="ship" parent="." instance=ExtResource( 2 )]

[connection signal="mission_over" from="MissionProgressBar" to="." method="_on_MissionProgressBar_mission_over"]
[connection signal="dead" from="ship" to="." method="_on_ship_dead"]
